;; QN_ACTR_Model_Initialization driving test OpenDS
;; QN-ACTR, Sample Driving (Modeling driving)
;; For questions and comments, please send to Shi Cao (shicao@umich.edu).

;;;;;;;;;;;;;;;;;;;;;
;; Task definition ;;
;;;;;;;;;;;;;;;;;;;;;

(use_world3d_template   
	:method    	driving    ;; the refresh rate will be syncronized to OpenDS (for TORCS it's about 50 Hz, 20 ms each cycle)
)

(use_predefined_model_setup		model_drive_opends)
;; the model will be connected with OpenDS. Road and scenario settings are done in OpenDS.

;;;;;;;;;;;;;;;;;;;;;
;; Mind definition ;;
;;;;;;;;;;;;;;;;;;;;;

;; driving-control based on Salvucci (2006) driving model with two-point visual-motor control

(chunk-type drive-control	;; both lateral and longitudinal controls 
        lane  			;; target driving lane, 0 for center lane, -1 for 1st on the left, 1 for 1st on the right
	na-old			;; near angle old (degree)
	na-new			;; near angle new (degree)	
	fa-old			;; far angle old  (degree)
	fd-old			;; far point distance (m)
	time-old
	speed-old		;; in m/ s/s

	stage			 
)

(chunk-type world3d-driving-criticalelement-vehicle screen-pos color)
(chunk-type world3d-driving-criticalelement-sign screen-pos content)
(chunk-type world3d-driving-criticalelement-vehicle-img screen-pos color)
(chunk-type world3d-driving-criticalelement-sign-img screen-pos content)
(chunk-type visual-location-world3d-driving-criticalelement kind id viewarea :attended) ;;mind use lowercase



(add-dm
 (driving isa drive-control 
	lane		0
	na-old		0
	na-new		0
	fa-old		0
        fd-old          0	;; because far distance is determined by speed * far-time
	time-old	0
	speed-old	0	;; use initial speed
	stage		1
 )

)



(p drive-control-attend-near
   =goal>
      isa drive-control
      lane =lane
      stage 1

==>
   +visual-location>
      isa  visual-location-world3d-driving
      kind near-point
      lane =lane   
   =goal>
      stage 2	
)

(p drive-control-process-near-attend-far
   =goal>
      isa drive-control
      lane 	=lane
      na-new    =na-1
      stage 	2
   =visual-location>
      isa  visual-location-world3d-driving
      kind near-point
      angle   =na-2


==>
   =goal>
      na-old 	=na-1      
      na-new    =na-2
      stage     3
   +visual-location>
      isa visual-location-world3d-driving
      kind far-point		;;this far point will include both road far points and car far points
      lane =lane		;;here may find both far-road point and far-car point, use the closest one
)


(p drive-control-process-far
   =goal>
      isa drive-control      
      lane =lane
      na-old 	=na-old
      na-new    =na-new
      fa-old    =fa-1
      fd-old    =fd-1
      speed-old =v-1
      time-old  =time-1
      stage     3
   =visual-location>
      isa 	visual-location-world3d-driving
      kind 	far-point
      angle	=fa-2
      distance 	=fd-2
   ?visual>
      state 	free
 
   ?manual>
      state   free

==>
!bind! =time-2 (get-clock-time)     ;; the short-cut way  
!bind! =v-2  (world3d-driving-get-velocity)   ;; the short-cut way 
   =goal>
      fa-old =fa-2
      fd-old =fd-2
      speed-old =v-2
      time-old =time-2
      stage     4
   +visual>
      isa         move-attention 		;;note here as in Salvucci's model, near and far angle is not computed from visual but use visual-location only. this +visual> is used for showing eye movement, in fact as a side effect. info processing is not affected by visual prepare, encoding and eye movement speed
      screen-pos  =visual-location
   +manual>
      isa	world3d-driving-two-point-visual-manual-steer
      na-old 	=na-old
      na-new    =na-new
      fa-old    =fa-1     
      fa-new    =fa-2
      time-old  =time-1
      time-new  =time-2

!eval! (world3d-driving-accelerate-brake   =fd-1   =fd-2  =v-1  =v-2    =time-1      =time-2  ) 	;;currently no module for this, just !eval! as Salvucci's model

)

(p attend-criticalelement
    =goal>
      isa drive-control  
      stage    4
   ==>
!bind! =view (world3d-driving-choosing-viewArea)
    =goal>
      stage    5
   +visual-location>
      isa visual-location-world3d-driving-criticalelement
      kind critical-element
	viewArea =view		
)

(p attend-criticalelement-detected
    =goal>
      isa drive-control  
      stage    5
    =visual-location>
      isa visual-location-world3d-driving-criticalelement
      kind critical-element
    ?visual>
     state     free
   ==>
    +visual>               
      isa      move-attention
      screen-pos =visual-location
    =goal>
      stage    6
)

(p attend-criticalelement-detect-failure
    =goal>
      isa drive-control  
      stage    5
    ?visual-location>
      state error
   ==>
    =goal>
      stage    1
)

(p read-criticalelement-vehicle
    =goal>
      isa drive-control  
      stage    6
    =visual>
      isa      world3d-driving-criticalelement-vehicle
      color    =col

==>
    +imaginal>
      isa      world3d-driving-criticalelement-vehicle-img
      color    =col
    =goal>
      stage    1
!eval! (world3d-driving-report-criticalelement-vehicle  =col) 
)

(p read-criticalelement-sign
    =goal>
      isa drive-control  
      stage    6
    =visual>
      isa      world3d-driving-criticalelement-sign
      content    =cont

==>
    +imaginal>
      isa      world3d-driving-criticalelement-sign-img
      content    =cont
    =goal>
      stage    1
!eval! (world3d-driving-report-criticalelement-sign  =cont) 
)

(p read-criticalelement-failure
    =goal>
      isa drive-control  
      stage    6
    ?visual>
      state error

==>
    =goal>
      stage    1
)

(goal-focus driving)